def add_numbers(num1, num2):
    if len(num1) > 100 or len(num2) > 100:
        return "Error: Numbers exceed maximum length of 100 digits."

    # Reverse the numbers for easier addition from right to left
    num1 = num1[::-1]
    num2 = num2[::-1]

    result = ""
    carry = 0
    len1 = len(num1)
    len2 = len(num2)
    max_len = max(len1, len2)

    # Perform the addition
    for i in range(max_len):
        # Get the current digits to add
        digit1 = int(num1[i]) if i < len1 else 0
        digit2 = int(num2[i]) if i < len2 else 0

        # Add the digits along with the carry from the previous addition
        digit_sum = digit1 + digit2 + carry

        # Calculate the current digit and the new carry
        digit = digit_sum % 10
        carry = digit_sum // 10

        # Prepend the current digit to the result
        result = str(digit) + result

    # If there's still a carry, add it to the result
    if carry:
        result = str(carry) + result

    return result

# Test the function
assert(add_numbers("2", "8") == "10")
assert(add_numbers("2", "888") == "890")
assert(add_numbers("1", "2") == "3")
assert(add_numbers("19999999999", "1") == "20000000000")
assert(add_numbers("1111111111111111111111111111111", "2") == "1111111111111111111111111111113")

numbers = input("Enter two numbers: ").split()
result = add_numbers(numbers[0], numbers[1])
print("Sum:", result)
